<div
  class="col-md-4"
  style="position: sticky; top: 0; height: 100vh; overflow-y: auto"
>
  <div class="card">
    <div class="card-body">
      <h5 class="card-title">Comments</h5>
      <ul
        class="list-group"
        id="commentsList"
        style="height: calc(100vh - 350px); overflow-y: auto"
      >
        <!-- we will add dynamically -->
      </ul>
    </div>
  </div>
  <% if(user) { %>
  <form onsubmit="handleComment(event)">
    <div class="input-group mb-3" id="commentContainer" style="display: none">
      <textarea
        class="form-control mt-3"
        placeholder="Enter your comment..."
        id="userCmnt"
      ></textarea>
    </div>
    <div id="captchaContainer" class="mt-2">
      <span><i>Please verify before commenting</i></span>
      <div
        class="g-recaptcha"
        data-sitekey="6LdEmoopAAAAAF5xoagy5rgEHI5RQWdmNJYlRg1D"
        data-callback="showCommentContainer"
      ></div>
    </div>
    <div class="d-flex justify-content-between mt-3">
      <button class="btn btn-primary" id="addCommentBtn" type="submit" disabled>
        Add Comments
      </button>
      <button
        class="btn btn-success"
        id="commentRequestsBtn"
        style="background-color: #34b433"
        onclick="toggleEditComments()"
        type="button"
      >
        Edit Comments
      </button>
    </div>
  </form>
  <% } else { %>
  <a class="mt-3" href="/login"><i>Login to Add Comments</i></a>
</div>
<% } %>

<script>
    let userId,
      isadmin = false,
      postUserIdm,
      editComment = false;

    <% if(user) { %>
      userId = <%= JSON.stringify(user?.id) %>;
      isadmin=<%= JSON.stringify(user?.isAdmin) %>;
    <% } else { %>
      userId = null;
    <% } %>;

    //utils
    const getPostId = () => {
      const urlParams = new URLSearchParams(window.location.pathname);
      const postId = window.location.pathname.split("/").pop();
      return postId;
    };
    function showCommentContainer() {
      const commentContainer = document.getElementById("commentContainer");
      commentContainer.style.display = "block";
      document.getElementById("userCmnt").style.width = "100%";
      document.getElementById("captchaContainer").style.display = "none";
      document.getElementById("addCommentBtn").disabled = false;
    }

    //utils function
    const fetchComments = () => {
      const postId = getPostId();
      const apiUrl = `http://localhost:3000/api/v1/comments/read/${postId}`;

      fetch(apiUrl)
        .then((response) => response.json())
        .then((res) => {
          const commentsList = document.getElementById("commentsList");
          commentsList.innerHTML = "";
          const data = res.data;
          if (!data.length) {
            commentsList.innerHTML = "<h3>No Comments</h3>";
            return;
          }
          data.forEach((item) => {
            const listItem = document.createElement("li");
            listItem.classList.add("list-group-item");
            listItem.innerHTML = `<img src="https://ui-avatars.com/api/?name=${item.user.name}" alt="${item.user.name}" width="30" height="30" style="border-radius: 50%;"> <b>${item.user.name}</b>: ${item.comment}`;
            commentsList.appendChild(listItem);
          });
        })
        .catch((error) => console.error("Error fetching comments:", error));
    };
    const fetchAllComments = () => {
      const postId = getPostId();
      const apiUrl = `http://localhost:3000/api/v1/comments/readall/${postId}`;

      fetch(apiUrl)
        .then((response) => response.json())
        .then((res) => {
          const data = res.data;
          const commentsList = document.getElementById("commentsList");
          commentsList.innerHTML = "";

          if (!data.length) {
            commentsList.innerHTML = "<h3>No Comments</h3>";
            return;
          }

          data.forEach((item) => {
            const listItem = document.createElement("li");
            listItem.className =
              "list-group-item d-flex justify-content-between align-items-center";

            // Comment content
            const commentContent = document.createElement("div");
  commentContent.innerHTML = `<span style="max-width: 285px; display: inline-block;"><b>${item.user.name}</b>: ${item.comment}</span>`;
  listItem.appendChild(commentContent);


            // Additional div with buttons
            const additionalDiv = document.createElement("div");
            additionalDiv.innerHTML = `
                <i class="fas fa-lg ${item.status ? "fa-eye" : "fa-eye-slash"}"
                  style="color: ${
                    item.status ? "green" : "red"
                  }; cursor: pointer;"
                  title="${item.status ? "Approved" : "Pending"}"
                  onclick="handleCommentAction(${item.id}, 'approve')">
                </i>
                <i class="fas fa-trash-alt text-danger fa-lg"
                  title="Delete"
                  style="cursor: pointer;"
                  onclick="handleCommentAction(${item.id},'remove')">
                </i>`;

            // Append the additionalDiv to the listItem
            listItem.appendChild(additionalDiv);
            commentsList.appendChild(listItem);
          });
        })
        .catch((error) => console.error("Error fetching comments:", error));
    };

    document.addEventListener("DOMContentLoaded", function () {
      fetchComments();
    });
    function handleCommentAction(commentId, actionType) {
      if (actionType === "remove") {
        const isConfirmed = window.confirm(
          "Are you sure you want to delete this comment?"
        );
        if (!isConfirmed) {
          return; // User cancelled the deletion
        }
      }
      const postId = getPostId();
      const apiUrl = `http://localhost:3000/api/v1/comments/${actionType}/${postId}`;

      const method = actionType === "approve" ? "PUT" : "DELETE";

      fetch(apiUrl, {
        method,
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ id: commentId }),
      })
        .then((response) => {
          if (!response.ok) {
            throw new Error(`Network response was not ok: ${response.status}`);
          }
          return response.json();
        })
        .then((data) => {
          fetchAllComments();
        })
        .catch((error) => {
          console.error(
            `Error ${actionType}ing comment with ID ${commentId}:`,
            error
          );
        });
    }

    // to fetch all the comments when user clicks on edit comments
    function toggleEditComments() {
      const editButton = document.getElementById("commentRequestsBtn");
      editComment = !editComment;

      if (editComment) {
        editButton.style.backgroundColor = "#228B22";
        fetchAllComments();
      } else {
        editButton.style.backgroundColor = "#34b433";
        fetchComments();
      }
    }

    // eventlistener to create new comments
    function handleComment() {
      // const userComment = prompt("Enter your comment:");
      event.preventDefault();
      const userComment = document.getElementById("userCmnt").value.trim();

      if (userComment !== "") {
        const apiURL = "http://localhost:3000/api/v1/comments/create/";
        const urlParams = new URLSearchParams(window.location.pathname);
        const postId = window.location.pathname.split("/").pop();
        fetch(apiURL + postId, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            comment: userComment,
          }),
        })
          .then((response) => {
            // if (response.statusText == "Unauthorized") {
            //   window.location.href = "/login";
            // }
            return response.json();
          })
          .then((data) => {
            console.log("Comment added successfully:", data);
          })
          .catch((error) => {
            console.error("Error adding comment:", error);
          })
          .finally(() => {
            document.getElementById("userCmnt").value = "";
          });
      }
    }
</script>
